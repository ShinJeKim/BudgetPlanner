<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.sist.repository.mappers.user">

	<!-- 메인기능 : 유저등록, 유저정보조회, 유저정보 수정, 유저삭제, 유저목록조회 -->
	<!-- 유저정보조회 -->
	<select id="do_searchOne" parameterType="String" resultType="UserVO">

		SELECT T1.*
        FROM(
                  SELECT ROW_NUMBER() OVER(ORDER BY F.REG_DT DESC) AS RNUM, 
	                            F.ID,
	                            F.DAILY_CODE,
	                            F.USAGE,
	                            C.MST_CT_NM,
	                            C.DTL_CT_NM,
	                            F.CONTENT,
	                            F.REG_DT,
	                            F.MOD_DT,
	                            COUNT(*) OVER() AS TOTAL_CNT
	                     FROM 
	                            FINANCE F,
	                            CATEGORY C
	                  WHERE F.MST_CT_ID = C.MST_CT_ID
	                      AND F.DTL_CT_ID = C.DTL_CT_ID
	                      AND F.MST_CT_ID = #{mst_ct_id}
	                      AND F.DTL_CT_ID = #{dtl_ct_id}
	                      AND (F.REG_DT BETWEEN #{start_date} AND #{end_date})
	                      AND ID=#{id}
                )T1
            <![CDATA[    
			WHERE T1.RNUM BETWEEN (#{page_size}*(#{page_num}-1)+1)
			                    AND (#{page_size}*(#{page_num}-1)+#{page_size})
				]]><!-- CDATA: 특수문자를 문자열로 인식 -->  
	</select>

	<!-- 유저등록 -->
	<insert id="do_save" parameterType="UserVO">

		INSERT INTO
		users(id,name,password,mail,reg_date)
		VALUES(#{id},#{name},#{password},#{mail},SYSDATE)

	</insert>

	<!-- 유저정보 수정 -->
	<update id="do_update" parameterType="UserVO">

		UPDATE users
		SET name = #{name}
		,password = #{password}
		,mail = #{mail}
		WHERE id = #{id}

	</update>

	<!-- 유저목록 조회 -->
	<select id="do_search" parameterType="UserVO" resultType="UserVO">
		SELECT tt1.no,tt1.id, tt1.name,tt1.u_level,tt1.login,tt1.mail
		,tt1.total_cnt
		FROM (SELECT t1.*, ROWNUM as no
		FROM (SELECT COUNT(*)over() AS total_cnt
		,t0.* FROM users t0 ORDER BY reg_date ASC)t1
		<where>
			<choose>
				<when test="SDiv == 'All'">
					AND ((id LIKE '%'||#{SWord}||'%') OR (name LIKE '%'||#{SWord}||'%') OR
					(u_level LIKE '%'||#{SWord}||'%'))
				</when>
				<when test="SDiv == 'id'">
					AND id LIKE '%'||#{SWord}||'%'
				</when>
				<when test="SDiv == 'name'">
					AND name LIKE '%'||#{SWord}||'%'
				</when>
				<when test="SDiv == 'level'">
					AND u_level LIKE '%'||#{SWord}||'%'
				</when>
			</choose>
		</where>
		)tt1
		WHERE tt1.no BETWEEN #{start_NO} and #{end_NO}
	</select>

	<!-- 테스트용 기능 : 전체삭제, 전체조회 -->
	<!-- 전체조회 -->
	<select id="do_searchAll" parameterType="UserVO" resultType="UserVO">

		select tt1.no,tt1.id, tt1.name,tt1.u_level,tt1.login,tt1.mail
		,tt1.t_cnt
		from (select t1.*, ROWNUM as no
		from (select COUNT(*)over() as t_cnt
		,t0.* from users t0 order by REG_DATE asc)t1
		where 1=1)tt1

	</select>

	<!-- 전체삭제 -->
	<delete id="do_deleteAll">

		DELETE FROM users

	</delete>
</mapper>